name: Deploy n8n with ngrok

on:
  workflow_dispatch: # Allows manual trigger
  push: # Runs on every commit
  schedule:
    - cron: "0 */5 * * *" # Runs every 5 hours to auto-restart

jobs:
  deploy-n8n:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          repository: Saksham-1612/n8n
          path: n8n-repo

      - name: Set up SSH Access via Serveo
        run: |
          sudo apt update && sudo apt install -y openssh-server
          echo "PermitRootLogin yes" | sudo tee -a /etc/ssh/sshd_config
          echo "PasswordAuthentication yes" | sudo tee -a /etc/ssh/sshd_config
          sudo service ssh restart
          echo "root:github" | sudo chpasswd
          ssh -o StrictHostKeyChecking=no -R 0:localhost:22 serveo.net > serveo.txt 2>&1 &
          sleep 5
          grep -oE "serveo.net:[0-9]+" serveo.txt | tee ssh_port.txt
          echo "SSH into the VM using:"
          cat ssh_port.txt | sed 's/^/ssh -p /;s/$/ root@serveo.net/'

      - name: Set up n8n Data Directory
        run: |
          cd n8n-repo
          mkdir -p ./n8n_data
          sudo chown -R 1000:1000 ./n8n_data
          sudo chmod -R 777 ./n8n_data

      - name: Check & Install Docker if Missing
        run: |
          if ! command -v docker &> /dev/null; then
            sudo apt update
            sudo apt install -y docker.io
            sudo systemctl start docker
            sudo systemctl enable docker
          fi

      - name: Check & Install Docker Compose if Missing
        run: |
          if ! command -v docker-compose &> /dev/null; then
            sudo apt update
            sudo apt install -y docker-compose
          fi

      - name: Start n8n with Docker Compose
        run: |
          cd n8n-repo
          docker-compose up -d

      - name: Install & Configure ngrok
        run: |
          if ! command -v ngrok &> /dev/null; then
            wget https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-stable-linux-amd64.zip
            unzip ngrok-stable-linux-amd64.zip
            sudo mv ngrok /usr/local/bin/
          fi
          ngrok config add-authtoken 2tbyFMZTbGsnyrIiwkkFRe4daED_5qN5HnVvHt6oC4cLb44nj || echo "ngrok auth token setup failed"

      - name: Expose n8n via ngrok
        run: |
          ngrok http 5678 > /dev/null &
          sleep 10
          NGROK_URL=$(curl -s http://127.0.0.1:4040/api/tunnels | jq -r '.tunnels[0].public_url' || echo "Error fetching URL")
          echo "Access n8n via this URL: $NGROK_URL"
          echo $NGROK_URL > n8n_url.txt

      - name: Keep the VM Alive
        run: |
          echo "n8n service will remain available for approximately 5 hours"
          sleep 17999
